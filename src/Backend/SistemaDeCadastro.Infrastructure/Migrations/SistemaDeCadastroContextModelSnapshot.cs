// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaDeCadastro.Infrastructure.AcessoRepositorio;

#nullable disable

namespace SistemaDeCadastro.Infrastructure.Migrations
{
    [DbContext(typeof(SistemaDeCadastroContext))]
    partial class SistemaDeCadastroContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeCadastro.Domain.Entidades.Cadastro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("Empresa")
                        .HasColumnType("boolean");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SobrenomeSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Cadastros", (string)null);
                });

            modelBuilder.Entity("SistemaDeCadastro.Domain.Entidades.Pessoa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CadastroId")
                        .HasColumnType("bigint");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CadastroId");

                    b.ToTable("Pessoas", (string)null);
                });

            modelBuilder.Entity("SistemaDeCadastro.Domain.Entidades.Cadastro", b =>
                {
                    b.OwnsOne("SistemaDeCadastro.Domain.Entidades.Credencial", "Credencial", b1 =>
                        {
                            b1.Property<long>("CadastroId")
                                .HasColumnType("bigint");

                            b1.Property<bool>("Bloqueada")
                                .HasColumnType("boolean")
                                .HasColumnName("CredencialBloqueada");

                            b1.Property<string>("Expirada")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)")
                                .HasColumnName("CredencialExpirada");

                            b1.Property<string>("Senha")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)")
                                .HasColumnName("CredencialSenha");

                            b1.HasKey("CadastroId");

                            b1.ToTable("Cadastros");

                            b1.WithOwner()
                                .HasForeignKey("CadastroId");
                        });

                    b.OwnsOne("SistemaDeCadastro.Domain.Entidades.Inscrito", "Inscrito", b1 =>
                        {
                            b1.Property<long>("CadastroId")
                                .HasColumnType("bigint");

                            b1.Property<bool>("Assinante")
                                .HasColumnType("boolean")
                                .HasColumnName("InscritoAssinante");

                            b1.Property<bool>("Associado")
                                .HasColumnType("boolean")
                                .HasColumnName("InscritoAssociado");

                            b1.Property<string>("Senha")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)")
                                .HasColumnName("InscritoSenha");

                            b1.HasKey("CadastroId");

                            b1.ToTable("Cadastros");

                            b1.WithOwner()
                                .HasForeignKey("CadastroId");
                        });

                    b.OwnsOne("SistemaDeCadastro.Domain.Entidades.Parceiro", "Parceiro", b1 =>
                        {
                            b1.Property<long>("CadastroId")
                                .HasColumnType("bigint");

                            b1.Property<bool>("Cliente")
                                .HasColumnType("boolean")
                                .HasColumnName("ParceiroCliente");

                            b1.Property<bool>("Colaborador")
                                .HasColumnType("boolean")
                                .HasColumnName("ParceiroColaborador");

                            b1.Property<bool>("Fornecedor")
                                .HasColumnType("boolean")
                                .HasColumnName("ParceiroFornecedor");

                            b1.Property<bool>("Prestador")
                                .HasColumnType("boolean")
                                .HasColumnName("ParceiroPrestador");

                            b1.HasKey("CadastroId");

                            b1.ToTable("Cadastros");

                            b1.WithOwner()
                                .HasForeignKey("CadastroId");
                        });

                    b.OwnsOne("SistemaDeCadastro.Domain.ValueObjects.Documento", "Documento", b1 =>
                        {
                            b1.Property<long>("CadastroId")
                                .HasColumnType("bigint");

                            b1.Property<DateTime>("DataValidade")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("DocumentoDataValidade");

                            b1.Property<string>("EstadoEmissor")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("DocumentoEstadoEmissor");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("DocumentoNumero");

                            b1.Property<string>("OrgaoEmissor")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("DocumentoOrgaoEmissor");

                            b1.HasKey("CadastroId");

                            b1.ToTable("Cadastros");

                            b1.WithOwner()
                                .HasForeignKey("CadastroId");
                        });

                    b.OwnsOne("SistemaDeCadastro.Domain.ValueObjects.Identificacao", "Identificador", b1 =>
                        {
                            b1.Property<long>("CadastroId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Empresa")
                                .HasColumnType("integer")
                                .HasColumnName("IdentificacaoEmpresa");

                            b1.Property<string>("Identificador")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)")
                                .HasColumnName("IdentificacaoIdentificador");

                            b1.Property<int>("Tipo")
                                .HasColumnType("integer")
                                .HasColumnName("IdentificacaoTipo");

                            b1.HasKey("CadastroId");

                            b1.ToTable("Cadastros");

                            b1.WithOwner()
                                .HasForeignKey("CadastroId");
                        });

                    b.Navigation("Credencial");

                    b.Navigation("Documento");

                    b.Navigation("Identificador");

                    b.Navigation("Inscrito");

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("SistemaDeCadastro.Domain.Entidades.Pessoa", b =>
                {
                    b.HasOne("SistemaDeCadastro.Domain.Entidades.Cadastro", "Cadastro")
                        .WithMany()
                        .HasForeignKey("CadastroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("SistemaDeCadastro.Domain.Entidades.Domicilio", "Domicilios", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<long>("Id"));

                            b1.Property<DateTime>("DataCriacao")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<long>("PessoaId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Tipo")
                                .HasColumnType("integer")
                                .HasColumnName("DomicilioTipo");

                            b1.HasKey("Id");

                            b1.HasIndex("PessoaId");

                            b1.ToTable("Domicilios", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");

                            b1.OwnsOne("SistemaDeCadastro.Domain.ValueObjects.Endereco", "Endereco", b2 =>
                                {
                                    b2.Property<long>("DomicilioId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("Bairro")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("Bairro");

                                    b2.Property<string>("Cep")
                                        .IsRequired()
                                        .HasMaxLength(8)
                                        .HasColumnType("character varying(8)")
                                        .HasColumnName("Cep");

                                    b2.Property<string>("Cidade")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("Cidade");

                                    b2.Property<string>("Complemento")
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)")
                                        .HasColumnName("Complemento");

                                    b2.Property<string>("Ibge")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("Ibge");

                                    b2.Property<string>("Logradouro")
                                        .IsRequired()
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)")
                                        .HasColumnName("Logradouro");

                                    b2.Property<string>("Numero")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("character varying(10)")
                                        .HasColumnName("Numero");

                                    b2.Property<string>("PontoReferencia")
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)")
                                        .HasColumnName("PontoReferencia");

                                    b2.Property<string>("Uf")
                                        .IsRequired()
                                        .HasMaxLength(2)
                                        .HasColumnType("character varying(2)")
                                        .HasColumnName("Uf");

                                    b2.HasKey("DomicilioId");

                                    b2.ToTable("Domicilios");

                                    b2.WithOwner()
                                        .HasForeignKey("DomicilioId");
                                });

                            b1.Navigation("Endereco");
                        });

                    b.OwnsOne("SistemaDeCadastro.Domain.ValueObjects.Telefone", "Telefone", b1 =>
                        {
                            b1.Property<long>("PessoaId")
                                .HasColumnType("bigint");

                            b1.Property<bool>("Celular")
                                .HasColumnType("boolean")
                                .HasColumnName("TelefoneCelular");

                            b1.Property<long>("Numero")
                                .HasColumnType("bigint")
                                .HasColumnName("TelefoneNumero");

                            b1.Property<bool>("Telegram")
                                .HasColumnType("boolean")
                                .HasColumnName("TelefoneTelegram");

                            b1.Property<bool>("Whatsapp")
                                .HasColumnType("boolean")
                                .HasColumnName("TelefoneWhatsapp");

                            b1.HasKey("PessoaId");

                            b1.ToTable("Pessoas");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");
                        });

                    b.Navigation("Cadastro");

                    b.Navigation("Domicilios");

                    b.Navigation("Telefone");
                });
#pragma warning restore 612, 618
        }
    }
}
